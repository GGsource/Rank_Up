/* Include the palette file */
@import url("palette.css");

body {
    background-color: var(--primary);
}

/* Make the bottom container where all images begin larger */
#imageContainer {
    width: calc(var(--rowWidth) + var(--resolution));
    /* center the container */
    margin-left: auto;
    margin-right: auto;
    /* Remove spacing between elements in the container*/
    display: flex;
    flex-wrap: wrap;
    /* Make it start off at least 2 images tall */
    height: calc(var(--resolution) * 2);
    /* DELETEME: this should adapt to how many imgs we actually have later on */

    background: repeating-linear-gradient(
        135deg,
        rgba(0, 0, 0, 0),
        rgba(0, 0, 0, 0.4) 6px
    );
}
/* 
- rowList (contains all rowFulls)
-       rowFull
-             rowHeader
-                     rowTab
-                             addRowAboveButton
-                             dragHandle
-                             addRowBelowButton
-                     rowTitle
-                     resetDeleteContainer
-                             resetButton
-                             emptyDiv
-                             deleteButton
-             rowBody
*/
#rowList {
    /* Center */
    display: flex;
    flex-direction: column;
    align-items: center;
}

.rowFull {
    display: flex;
    flex-direction: row;
    height: var(--resolution);
    margin-bottom: calc(var(--resolution) / 20);
    /* DEBUGGING: This margin may not be needed later. */
}
.rowTab {
    /* Size it to parent height and half the width and list children as column */
    height: 100%;
    width: calc(var(--resolution) / 2);
    transition: width var(--animNormMS), padding var(--animNormMS),
        border-radius var(--animNormMS);
    display: flex;
    flex-direction: column;

    /* Make the tab hang off the left side of the parent */
    position: absolute;
    top: 0;
    left: 0;
    transform: translateX(-100%);

    /* Add padding without altering size */
    padding: 5px 5px 5px 10px;
    box-sizing: border-box;
    gap: 10px;

    /* Round corners off left side */
    border-radius: var(--radius) 0 0 var(--radius);

    /* DELETEME: Debugging colors */
    background: repeating-linear-gradient(
        290deg,
        rgba(0, 0, 0, 0),
        rgba(0, 255, 0, 0.4) 5px
    );
}
.rowTab.closed {
    width: 0;
    padding: 0;
    border-radius: 0;
}

.resetDeleteButton,
.tabButton {
    filter: brightness(60%);
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    transition: transform var(--animInstMS), filter var(--animInstMS);
}
.resetDeleteButton:hover,
.tabButton:hover {
    filter: brightness(80%);
    transform: scale(1.1);
}
.resetDeleteButton:active,
.tabButton:active {
    filter: brightness(100%);
    transform: scale(1);
}

.mainRow {
    /* Take up full vertical space allotted by parent */
    height: 100%;
    display: flex;
    flex-direction: row;

    background: repeating-linear-gradient(
        45deg,
        rgba(0, 0, 0, 0),
        rgba(182, 24, 182, 0.4) 60px
    );
}
.rowHeader {
    position: relative; /* Allows the resetDeleteContainer to be positioned relative to this */
    /* Make the header be a square */
    width: var(--resolution);
    /* Make its contents be listed horizontally */
    display: flex;
    flex-direction: row;
    background: repeating-linear-gradient(
        135deg,
        rgba(0, 0, 0, 0),
        rgba(255, 0, 0, 0.4) 40px
    );
}
.rowBody {
    /* Make the rowBody take up the remaining space in the rowTab */
    width: var(--rowWidth);
    background: repeating-linear-gradient(
        135deg,
        rgba(0, 0, 0, 0),
        rgba(0, 0, 255, 0.4) 40px
    );
    /* Align items within to the left */
    display: flex;
    flex-direction: row;
}

/* Resize all images to be uniform squares */
.rankingImage {
    width: var(--resolution);
    height: var(--resolution);
    box-sizing: border-box;
    object-position: center;
    object-fit: cover;
    border: solid 0px transparent;
    background-color: transparent;
    border-radius: 0px;
    padding: 0px;
    backdrop-filter: none;
    transition: border var(--animFastMS), background-color var(--animFastMS),
        border-radius var(--animFastMS), padding var(--animFastMS),
        transform var(--animFastMS), backdrop-filter var(--animFastMS);
}
body.allow-hover .rankingImage:hover {
    border-radius: 5px;
    transform: scale(1.1);
    z-index: 5;
}
body .Container .rankingImage.selectedImage {
    border: solid 5px rgba(255, 255, 255, 0.05);
    background-color: rgba(255, 255, 255, 0.3);
    border-radius: 10px;
    padding: 0px;
    backdrop-filter: blur(5px);
    transform: scale(1);
    z-index: 1;
}
body .Container .rankingImage.draggingImage {
    padding: 20px;
}

.rowTitle {
    width: 100%;
    text-align: center;
    font: 2em "Alice", sans-serif;
    background-color: transparent;
    border: none;
    color: white;
    z-index: 2;
}

.resetDeleteContainer {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: absolute;
    right: 0;
}

.resetDeleteButton {
    width: calc(var(--resolution) / 3);
    height: calc(var(--resolution) / 3);
    z-index: 3;
}

.dragHandle {
    /* Make this section take up the remaining space not occupied by the addrow buttons */
    flex-grow: 1;
    min-height: 0;
    object-fit: contain;
}
