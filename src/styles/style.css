/* Include the palette file */
@import url("palette.css");

body {
    background-color: var(--primary);
    margin: 0; /* Remove the padding around it */
}

#pageCenterColumn {
    display: flex;
    flex-direction: column;
    align-items: center;
    border: solid 1px blue; /* DEBUGGING: Border to see limits*/
}

/* Make the bottom container where all images begin larger */
#imageContainer {
    width: var(--fullRowWidth);
    /* Remove spacing between elements in the container*/
    display: flex;
    flex-wrap: wrap;
    height: calc(var(--resolution) * 2); /* Make it start off at least 2 images tall */
    background: repeating-linear-gradient(135deg, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4) 6px);
    border: solid 1px green; /* DEBUGGING: Border to see limits*/
}

#rowList {
    /* Center the rows */
    display: flex;
    flex-direction: column;
    border: solid 1px yellow; /* DEBUGGING: Border to see limits*/
    width: 100%;
    /* Center children */
    align-items: center;
}
/* 
- rowList (contains all rowFulls)
-       rowFull
-             rowHeader
-                     rowTab
-                             addRowAboveButton
-                             dragHandle
-                             addRowBelowButton
-                     rowTitle
-                     resetDeleteContainer
-                             resetButton
-                             deleteButton
-             rowBody
*/
.rowFull {
    display: flex;
    flex-direction: row;
    height: var(--resolution);
    margin-bottom: calc(var(--resolution) / 20); /* DEBUGGING: This margin may not be needed later. */
}

.rowTab {
    /* Size it to parent height and half the width and list children as column */
    height: 100%;
    width: calc(var(--resolution) / 2);
    transition: width var(--animNormMS), padding var(--animNormMS), border-radius var(--animNormMS);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    /* Make the tab hang off the left side of the parent */
    position: absolute;
    top: 0;
    left: 0;
    transform: translateX(-100%);
    /* Add padding without altering size */
    box-sizing: border-box;
    border-radius: var(--radius) 0 0 var(--radius); /* Round corners off left side */
    background: repeating-linear-gradient(290deg, rgba(0, 0, 0, 0), rgba(0, 255, 0, 0.4) 5px);
    overflow: hidden;
}
.rowTab.closed {
    width: 0;
    padding: 0;
    border-radius: 0;
}

.dragContainer {
    flex-grow: 1;
    min-height: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}
.tabButton {
    width: 100%;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    -webkit-user-select: none; /* Safari */
    -moz-user-select: none; /* Firefox */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none; /* Standard syntax */
}
.tabButton:hover {
    z-index: 2;
}
.addRowButton {
    box-sizing: border-box;
}
.addRowAboveButton {
    padding: 5px 5px 0px 5px;
}
.addRowBelowButton {
    padding: 0px 5px 5px 5px;
}
.dragHandle {
    min-height: 0;
    min-width: 0;
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    max-width: calc(var(--resolution) / 4);
    padding: 0px 4px;
    box-sizing: border-box;
}

.resetDeleteButton,
.tabButton {
    filter: brightness(60%);
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    transition: transform var(--animInstMS), filter var(--animInstMS);
}
.resetDeleteButton:hover,
.tabButton:hover {
    filter: brightness(80%);
    transform: scale(1.1) rotate(0);
}
.resetDeleteButton:active,
.tabButton:active {
    filter: brightness(100%);
    transform: scale(0.9) rotate(0);
}

.resetDeleteButton.resetButton:active {
    transform: scale(0.9) rotate(-1turn);
}

.rowHeader {
    position: relative; /* Allows the resetDeleteContainer to be positioned relative to this */
    width: var(--resolution); /* Make the header be a square */
    /* Make its contents be listed horizontally */
    display: flex;
    flex-direction: row;
    background: repeating-linear-gradient(135deg, rgba(0, 0, 0, 0), rgba(255, 0, 0, 0.4) 40px);
}

.rowBody {
    /* Make the rowBody take up the remaining space in the rowTab */
    width: var(--rowWidth);
    background: repeating-linear-gradient(135deg, rgba(0, 0, 0, 0), rgba(0, 0, 255, 0.4) 40px);
    /* Align items within to the left */
    display: flex;
    flex-direction: row;
}

.rankingImage {
    width: var(--resolution);
    height: var(--resolution);
    box-sizing: border-box;
    object-position: center;
    object-fit: cover;
    border: solid 0px transparent;
    background-color: transparent;
    border-radius: 0px;
    padding: 0px;
    backdrop-filter: none;
    transition: border var(--animFastMS), background-color var(--animFastMS), border-radius var(--animFastMS), padding var(--animFastMS),
        transform var(--animFastMS), backdrop-filter var(--animFastMS);
}

body.allow-hover .rankingImage:hover {
    border-radius: 5px;
    transform: scale(1.1);
    z-index: 5;
}
body .Container .rankingImage.selectedImage {
    border: solid 5px rgba(255, 255, 255, 0.05);
    background-color: rgba(255, 255, 255, 0.3);
    border-radius: 10px;
    padding: 0px;
    backdrop-filter: blur(5px);
    transform: scale(1);
    z-index: 1;
}
body .Container .rankingImage.draggingImage {
    padding: 20px;
}

.rowTitle {
    width: 100%;
    text-align: center;
    font: 2em "Alice", sans-serif;
    background-color: transparent;
    border: none;
    color: white;
    z-index: 2;
}

.resetDeleteContainer {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: absolute;
    right: 0;
}

.resetDeleteButton {
    width: calc(var(--resolution) / 3);
    height: calc(var(--resolution) / 3);
    z-index: 3;
}

/* CSS For the header area */

#headerBox {
    display: flex;
    flex-direction: column;
    padding: 2% 0%;
    /* Space between tiems */
    gap: 5px;
    width: var(--fullRowWidth);
    flex-wrap: wrap;
}
.headerText {
    background-color: transparent;
    border: none;
    color: white;
    resize: none;
}
#headerTitle {
    font: 3em "Alice", sans-serif;
    flex: 1;
}
